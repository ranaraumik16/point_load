{"version":3,"sources":["../../../src/lib/laslaz-decoder.js"],"names":["getModule","require","Module","POINT_FORMAT_READERS","dv","position","getInt32","intensity","getUint16","classification","getUint8","color","readAs","buf","Type","offset","count","undefined","sub","slice","BYTES_PER_ELEMENT","r","ret","i","push","parseLASHeader","arraybuffer","o","pointsOffset","Uint32Array","pointsFormatId","Uint8Array","pointsStructSize","Uint16Array","pointsCount","start","scale","Float64Array","bounds","maxs","mins","LASLoader","readOffset","header","skip","Error","Math","min","end","buffer","hasMoreData","pointsToRead","bufferSize","ceil","pointsRead","src","set","LAZLoader","instance","LASZip","abInt","_malloc","byteLength","HEAPU8","open","e","message","thisBuf","bufRead","getPoint","a","LASDecoder","len","arrayb","decoder","pointSize","index","DataView","LASFile","determineVersion","version","determineFormat","formatId","loader","isCompressed","bit7","bit6","ver","Int8Array","versionAsString","isOpen","getHeader","readData","close","LASModuleWasLoaded"],"mappings":"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","sourcesContent":["/*\n  Modified from Uday Verma and Howard Butler's plasio\n  https://github.com/verma/plasio/\n  MIT License\n*/\n\n// laslaz.js - treat as compiled code\nconst getModule = require('../libs/laz-perf');\n\nlet Module = null;\n\nconst POINT_FORMAT_READERS = {\n  0: dv => {\n    return {\n      position: [dv.getInt32(0, true), dv.getInt32(4, true), dv.getInt32(8, true)],\n      intensity: dv.getUint16(12, true),\n      classification: dv.getUint8(15, true)\n    };\n  },\n  1: dv => {\n    return {\n      position: [dv.getInt32(0, true), dv.getInt32(4, true), dv.getInt32(8, true)],\n      intensity: dv.getUint16(12, true),\n      classification: dv.getUint8(15, true)\n    };\n  },\n  2: dv => {\n    return {\n      position: [dv.getInt32(0, true), dv.getInt32(4, true), dv.getInt32(8, true)],\n      intensity: dv.getUint16(12, true),\n      classification: dv.getUint8(15, true),\n      color: [dv.getUint16(20, true), dv.getUint16(22, true), dv.getUint16(24, true)]\n    };\n  },\n  3: dv => {\n    return {\n      position: [dv.getInt32(0, true), dv.getInt32(4, true), dv.getInt32(8, true)],\n      intensity: dv.getUint16(12, true),\n      classification: dv.getUint8(15, true),\n      color: [dv.getUint16(28, true), dv.getUint16(30, true), dv.getUint16(32, true)]\n    };\n  }\n};\n\nfunction readAs(buf, Type, offset, count) {\n  count = count === undefined || count === 0 ? 1 : count;\n  const sub = buf.slice(offset, offset + Type.BYTES_PER_ELEMENT * count);\n\n  const r = new Type(sub);\n  if (count === 1) {\n    return r[0];\n  }\n\n  const ret = [];\n  for (let i = 0; i < count; i++) {\n    ret.push(r[i]);\n  }\n\n  return ret;\n}\n\nfunction parseLASHeader(arraybuffer) {\n  const o = {};\n\n  o.pointsOffset = readAs(arraybuffer, Uint32Array, 32 * 3);\n  o.pointsFormatId = readAs(arraybuffer, Uint8Array, 32 * 3 + 8);\n  o.pointsStructSize = readAs(arraybuffer, Uint16Array, 32 * 3 + 8 + 1);\n  o.pointsCount = readAs(arraybuffer, Uint32Array, 32 * 3 + 11);\n\n  let start = 32 * 3 + 35;\n  o.scale = readAs(arraybuffer, Float64Array, start, 3);\n  start += 24; // 8*3\n  o.offset = readAs(arraybuffer, Float64Array, start, 3);\n  start += 24;\n\n  const bounds = readAs(arraybuffer, Float64Array, start, 6);\n  start += 48; // 8*6;\n  o.maxs = [bounds[0], bounds[2], bounds[4]];\n  o.mins = [bounds[1], bounds[3], bounds[5]];\n\n  return o;\n}\n\n// LAS Loader\n// Loads uncompressed files\n//\nclass LASLoader {\n  constructor(arraybuffer) {\n    this.arraybuffer = arraybuffer;\n  }\n\n  open() {\n    // nothing needs to be done to open this file\n    //\n    this.readOffset = 0;\n    return true;\n  }\n\n  getHeader() {\n    this.header = parseLASHeader(this.arraybuffer);\n    return this.header;\n  }\n\n  readData(count, offset, skip) {\n    const {header, arraybuffer} = this;\n    if (!header) {\n      throw new Error('Cannot start reading data till a header request is issued');\n    }\n\n    let {readOffset} = this;\n    let start;\n\n    if (skip <= 1) {\n      count = Math.min(count, header.pointsCount - readOffset);\n      start = header.pointsOffset + readOffset * header.pointsStructSize;\n      const end = start + count * header.pointsStructSize;\n      readOffset += count;\n      this.readOffset = readOffset;\n      return {\n        buffer: arraybuffer.slice(start, end),\n        count,\n        hasMoreData: readOffset < header.pointsCount\n      };\n    }\n\n    const pointsToRead = Math.min(count * skip, header.pointsCount - readOffset);\n    const bufferSize = Math.ceil(pointsToRead / skip);\n    let pointsRead = 0;\n\n    const buf = new Uint8Array(bufferSize * header.pointsStructSize);\n    for (let i = 0; i < pointsToRead; i++) {\n      if (i % skip === 0) {\n        start = header.pointsOffset + readOffset * header.pointsStructSize;\n        const src = new Uint8Array(arraybuffer, start, header.pointsStructSize);\n\n        buf.set(src, pointsRead * header.pointsStructSize);\n        pointsRead++;\n      }\n\n      readOffset++;\n    }\n    this.readOffset = readOffset;\n\n    return {\n      buffer: buf.buffer,\n      count: pointsRead,\n      hasMoreData: readOffset < header.pointsCount\n    };\n  }\n\n  close() {\n    this.arraybuffer = null;\n    return true;\n  }\n}\n\n// LAZ Loader\n// Uses NaCL module to load LAZ files\n//\nclass LAZLoader {\n  constructor(arraybuffer) {\n    this.arraybuffer = arraybuffer;\n    this.instance = null; // LASZip instance\n\n    if (!Module) {\n      // Avoid executing laz-perf on import\n      Module = getModule();\n    }\n  }\n\n  open() {\n    try {\n      const {arraybuffer} = this;\n      this.instance = new Module.LASZip();\n      const abInt = new Uint8Array(arraybuffer);\n      const buf = Module._malloc(arraybuffer.byteLength);\n\n      this.instance.arraybuffer = arraybuffer;\n      this.instance.buf = buf;\n      Module.HEAPU8.set(abInt, buf);\n      this.instance.open(buf, arraybuffer.byteLength);\n\n      this.instance.readOffset = 0;\n\n      return true;\n    } catch (e) {\n      throw new Error(`Failed to open file: ${e.message}`);\n    }\n  }\n\n  getHeader() {\n    if (!this.instance) {\n      throw new Error('You need to open the file before trying to read header');\n    }\n\n    try {\n      const header = parseLASHeader(this.instance.arraybuffer);\n      header.pointsFormatId &= 0x3f;\n      this.header = header;\n      return header;\n    } catch (e) {\n      throw new Error(`Failed to get header: ${e.message}`);\n    }\n  }\n\n  readData(count, offset, skip) {\n    if (!this.instance) {\n      throw new Error('You need to open the file before trying to read stuff');\n    }\n\n    const {header, instance} = this;\n\n    if (!header) {\n      throw new Error(\n        'You need to query header before reading, I maintain state that way, sorry :('\n      );\n    }\n\n    try {\n      const pointsToRead = Math.min(count * skip, header.pointsCount - instance.readOffset);\n      const bufferSize = Math.ceil(pointsToRead / skip);\n      let pointsRead = 0;\n\n      const thisBuf = new Uint8Array(bufferSize * header.pointsStructSize);\n      const bufRead = Module._malloc(header.pointsStructSize);\n      for (let i = 0; i < pointsToRead; i++) {\n        instance.getPoint(bufRead);\n\n        if (i % skip === 0) {\n          const a = new Uint8Array(Module.HEAPU8.buffer, bufRead, header.pointsStructSize);\n          thisBuf.set(a, pointsRead * header.pointsStructSize);\n          pointsRead++;\n        }\n\n        instance.readOffset++;\n      }\n\n      return {\n        buffer: thisBuf.buffer,\n        count: pointsRead,\n        hasMoreData: instance.readOffset < header.pointsCount\n      };\n    } catch (e) {\n      throw new Error(`Failed to read data: ${e.message}`);\n    }\n  }\n\n  close() {\n    try {\n      if (this.instance !== null) {\n        this.instance.delete();\n        this.instance = null;\n      }\n      return true;\n    } catch (e) {\n      throw new Error(`Failed to close file: ${e.message}`);\n    }\n  }\n}\n\n// Helper class: Decodes LAS records into points\n//\nclass LASDecoder {\n  constructor(buffer, len, header) {\n    this.arrayb = buffer;\n    this.decoder = POINT_FORMAT_READERS[header.pointsFormatId];\n    this.pointsCount = len;\n    this.pointSize = header.pointsStructSize;\n    this.scale = header.scale;\n    this.offset = header.offset;\n    this.mins = header.mins;\n    this.maxs = header.maxs;\n  }\n\n  getPoint(index) {\n    if (index < 0 || index >= this.pointsCount) {\n      throw new Error('Point index out of range');\n    }\n\n    const dv = new DataView(this.arrayb, index * this.pointSize, this.pointSize);\n    return this.decoder(dv);\n  }\n}\n\n// A single consistent interface for loading LAS/LAZ files\nexport class LASFile {\n  constructor(arraybuffer) {\n    this.arraybuffer = arraybuffer;\n\n    this.determineVersion();\n    if (this.version > 13) {\n      throw new Error('Only file versions <= 1.3 are supported at this time');\n    }\n\n    this.determineFormat();\n    if (POINT_FORMAT_READERS[this.formatId] === undefined) {\n      throw new Error('The point format ID is not supported');\n    }\n\n    this.loader = this.isCompressed\n      ? new LAZLoader(this.arraybuffer)\n      : new LASLoader(this.arraybuffer);\n  }\n\n  determineFormat() {\n    const formatId = readAs(this.arraybuffer, Uint8Array, 32 * 3 + 8);\n    const bit7 = (formatId & 0x80) >> 7;\n    const bit6 = (formatId & 0x40) >> 6;\n\n    if (bit7 === 1 && bit6 === 1) {\n      throw new Error('Old style compression not supported');\n    }\n\n    this.formatId = formatId & 0x3f;\n    this.isCompressed = bit7 === 1 || bit6 === 1;\n  }\n\n  determineVersion() {\n    const ver = new Int8Array(this.arraybuffer, 24, 2);\n    this.version = ver[0] * 10 + ver[1];\n    this.versionAsString = `${ver[0]}.${ver[1]}`;\n  }\n\n  open() {\n    if (this.loader.open()) {\n      this.isOpen = true;\n    }\n  }\n\n  getHeader() {\n    return this.loader.getHeader();\n  }\n\n  readData(count, start, skip) {\n    return this.loader.readData(count, start, skip);\n  }\n\n  close() {\n    if (this.loader.close()) {\n      this.isOpen = false;\n    }\n  }\n\n  getUnpacker() {\n    return LASDecoder;\n  }\n}\n\nexport const LASModuleWasLoaded = false;\n\n/* eslint no-use-before-define: 2 */\n"],"file":"laslaz-decoder.js"}